---
import { getCollection, type CollectionEntry } from 'astro:content'
import BlogCard from '@/components/BlogCard.astro'
import BaseLayout from '@/layouts/Layout.astro'
import { Icon } from 'astro-icon/components'

export async function getStaticPaths() {
	const allPosts: CollectionEntry<"blog">[] = await getCollection('blog', ({ data }) => {
		return data.draft !== true
	})

	// Get all unique tags
	const allTags = allPosts.flatMap(post => post.data.tags)
	const uniqueTags = [...new Set(allTags)]

	return uniqueTags.map(tag => {
		const filteredPosts = allPosts
			.filter(post => post.data.tags.includes(tag))
			.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())

		return {
			params: { tag: tag.toLowerCase().replace(/\s+/g, '-') },
			props: { posts: filteredPosts, tag }
		}
	})
}

const { posts, tag } = Astro.props
---

<BaseLayout 
	title={`#${tag} - Blog`}
	description={`Browse all posts tagged with ${tag}.`}
>
	<main class="app-container pt-32 pb-16">
		<div class="space-y-6">
			<!-- Back Link -->
			<a 
				href="/blog"
				class="inline-flex items-center gap-2 text-secondary dark:text-secondary-dark hover:text-primary dark:hover:text-primary-dark transition-colors"
			>
				<Icon name="mdi:arrow-left" class="w-5 h-5" aria-hidden="true" />
				<span>Back to all posts</span>
			</a>

			<!-- Header -->
			<div class="space-y-4">
				<div class="flex items-center gap-3">
					<div class="px-4 py-2 rounded-full bg-accent/10 dark:bg-accent-dark/10 text-accent dark:text-accent-dark border border-accent/20 dark:border-accent-dark/20">
						<Icon name="mdi:tag" class="w-5 h-5 inline mr-2" aria-hidden="true" />
						#{tag}
					</div>
				</div>
				<h1 class="text-4xl md:text-5xl lg:text-6xl font-bold tracking-tight">
					#{tag}
				</h1>
				<p class="text-lg text-secondary dark:text-secondary-dark">
					{posts.length} {posts.length === 1 ? 'post' : 'posts'} with this tag
				</p>
			</div>
		</div>
	</main>

	<section class="app-container pb-20" aria-label={`Posts tagged with ${tag}`}>
		<ul class="posts-grid-container" role="list">
			{
				posts.map((post) => (
					<li>
						<BlogCard post={post} />
					</li>
				))
			}
		</ul>
	</section>
</BaseLayout>
